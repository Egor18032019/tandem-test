package  task2;

import java.util.List;

/**
 * Интерфейс механизма «умного» присвоения номеров элементам списка.
 */
public interface IElementNumberAssigner {

    /**
     * Метод выставляет номера {@link IElement#setupNumber(int)}
     * для элементов коллекции {@code elements}
     * в порядке следования элементов в коллекции.
     *
     * Изначально коллекция не содержит элементов, номера которых повторяются.
     *
     * При этом обеспечиваются слеюущие условия:
     * <ul>
     *  <li>
     *      <p>метод работает только с существующими элементами (не создает новых),</p>
     *  </li>
     *  <li>
     *      <p>на протяжении всей работы метода обеспечивается уникальность номеров элементов:</p>
     *      <p>вызов {@code element.setNumber(i)} разрешен ⇔   ∀ e ∊ {@code elements} (e.number ≠ i),</p>
     *  </li>
     *  <li>
     *      <p>метод устойчив к передаче в него в качестве параметра {@link java.util.Collections#unmodifiableList(List)} и любой другой реализации immutable-list,</p>
     *  </li>
     *  <li>
     *      <p>метод должен работать за «приемлемое» время ({@link IElement#setupNumber(int)} - трудоемкая операция и пользоваться ей надо рационально)</p>
     *  </li>
     * </ul>
     *
     * @param elements элементы, которым нужно выставить номера
     */
    void assignNumbers(List<IElement> elements);

}
/**
 * как должно работать на мой взгляд ))
 * Пришёл список IElement
 *  примерно такие [4,0,1,2,5] и на выходе мы должны получить список[0,1,2,3,4]
 * шаг 1
 * первому элемента IElement мы должны присвоить number = 0 (setupNumber(0)
 * {предварительно проверив el.getNumber()!=0 }
 * и получается надо освободить/перезаписать 3 element(у которого getNumber()=1)
 * для этого мы:
 * так есть условие  <p>на протяжении всей работы метода обеспечивается уникальность номеров элементов:</p>
 * для этого мы предварительно циклом вытаскиваем все number и складываем их ->
 *  в ArrayList
 * Находим самый максимальный number getFreeSwapNumber() и прибавляем + 1 = freeSwapNumber;
 * то есть мы по списку пробегаем циклом по elements
 * и вызывая el.getNumber() проверяем есть ли такие числа в ArrayList
 * если есть то в ArrayList ищем index => по индексу дергаем из списка элемент и setupNumber(freeSwapNumber)
 * далее freeSwapNumber++
 */
